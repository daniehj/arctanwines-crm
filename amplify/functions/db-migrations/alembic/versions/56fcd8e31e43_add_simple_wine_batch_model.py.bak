"""Add simple wine batch model

Revision ID: 56fcd8e31e43
Revises: a370e09fe716
Create Date: 2025-06-23 13:18:36.522652

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text
import sys
from pathlib import Path

# Add models path for imports
sys.path.append(str(Path(__file__).parent.parent.parent / "models"))
from base import GUID

# revision identifiers, used by Alembic.
revision = '56fcd8e31e43'
down_revision = 'a370e09fe716'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('suppliers',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Supplier company name'),
    sa.Column('country', sa.String(length=100), nullable=False, comment='Country of origin'),
    sa.Column('contact_person', sa.String(length=255), nullable=True, comment='Primary contact person'),
    sa.Column('email', sa.String(length=255), nullable=True, comment='Primary email address'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='Primary phone number'),
    sa.Column('payment_terms', sa.Integer(), nullable=True, comment='Payment terms in days'),
    sa.Column('currency', sa.String(length=3), nullable=True, comment='Primary currency (EUR, NOK, USD)'),
    sa.Column('tax_id', sa.String(length=50), nullable=True, comment='VAT number or tax identification'),
    sa.Column('id', GUID(), nullable=False, comment='Primary key using UUID'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was last updated'),
    sa.Column('active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wines',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Wine name'),
    sa.Column('producer', sa.String(length=255), nullable=False, comment='Wine producer/winery'),
    sa.Column('region', sa.String(length=255), nullable=True, comment='Wine region'),
    sa.Column('country', sa.String(length=100), nullable=False, comment='Country of origin'),
    sa.Column('vintage', sa.Integer(), nullable=True, comment='Wine vintage year'),
    sa.Column('grape_varieties', sa.Text(), nullable=True, comment='JSON string of grape varieties'),
    sa.Column('alcohol_content', sa.DECIMAL(precision=4, scale=2), nullable=True, comment='Alcohol percentage (e.g., 13.5)'),
    sa.Column('bottle_size_ml', sa.Integer(), nullable=True, comment='Bottle size in milliliters'),
    sa.Column('product_category', sa.String(length=50), nullable=True, comment='Wine category (red, white, rosé, sparkling, dessert)'),
    sa.Column('tasting_notes', sa.Text(), nullable=True, comment='Tasting notes and description'),
    sa.Column('serving_temperature', sa.String(length=50), nullable=True, comment='Recommended serving temperature'),
    sa.Column('food_pairing', sa.Text(), nullable=True, comment='Food pairing suggestions'),
    sa.Column('organic', sa.Boolean(), nullable=True, comment='Organic certification'),
    sa.Column('biodynamic', sa.Boolean(), nullable=True, comment='Biodynamic certification'),
    sa.Column('fiken_product_id', sa.Integer(), nullable=True, comment='Fiken product ID for sync'),
    sa.Column('id', GUID(), nullable=False, comment='Primary key using UUID'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was last updated'),
    sa.Column('active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wine_batch_costs',
    sa.Column('batch_id', GUID(), nullable=False, comment='Reference to wine batch'),
    sa.Column('cost_type', sa.String(length=50), nullable=False, comment='Type of cost (transport, customs, freight, wine_purchase)'),
    sa.Column('amount_ore', sa.Integer(), nullable=False, comment='Cost amount in øre (or cents for EUR)'),
    sa.Column('currency', sa.String(length=3), nullable=False, comment='Currency (NOK, EUR)'),
    sa.Column('fiken_account_code', sa.String(length=20), nullable=True, comment='Fiken account code for this cost'),
    sa.Column('payment_date', sa.Date(), nullable=True, comment='Date payment was made'),
    sa.Column('allocation_method', sa.String(length=30), nullable=True, comment='How cost is allocated (per_bottle, by_value, percentage)'),
    sa.Column('invoice_reference', sa.String(length=100), nullable=True, comment='Invoice or reference number'),
    sa.Column('id', GUID(), nullable=False, comment='Primary key using UUID'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was last updated'),
    sa.Column('active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.ForeignKeyConstraint(['batch_id'], ['wine_batches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wine_inventory',
    sa.Column('wine_id', GUID(), nullable=False, comment='Reference to wine'),
    sa.Column('batch_id', GUID(), nullable=True, comment='Reference to import batch'),
    sa.Column('quantity_available', sa.Integer(), nullable=False, comment='Current stock quantity'),
    sa.Column('cost_per_bottle_ore', sa.Integer(), nullable=False, comment='Cost per bottle in NOK øre'),
    sa.Column('selling_price_ore', sa.Integer(), nullable=False, comment='Selling price in NOK øre'),
    sa.Column('minimum_stock_level', sa.Integer(), nullable=True, comment='Minimum stock alert level'),
    sa.Column('location', sa.String(length=100), nullable=True, comment='Storage location'),
    sa.Column('best_before_date', sa.String(length=10), nullable=True, comment='Best before date (YYYY-MM-DD)'),
    sa.Column('id', GUID(), nullable=False, comment='Primary key using UUID'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when record was last updated'),
    sa.Column('active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.ForeignKeyConstraint(['batch_id'], ['wine_batches.id'], ),
    sa.ForeignKeyConstraint(['wine_id'], ['wines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('wine_batches', sa.Column('import_date', sa.Date(), nullable=False, comment='Date of import'))
    op.add_column('wine_batches', sa.Column('supplier_id', GUID(), nullable=True, comment='Reference to supplier'))
    op.add_column('wine_batches', sa.Column('eur_exchange_rate', sa.DECIMAL(precision=10, scale=6), nullable=False, comment='EUR to NOK exchange rate at import'))
    op.add_column('wine_batches', sa.Column('wine_cost_eur_cents', sa.Integer(), nullable=False, comment='Wine cost in EUR cents'))
    op.add_column('wine_batches', sa.Column('transport_cost_ore', sa.Integer(), nullable=True, comment='Transport cost in NOK øre'))
    op.add_column('wine_batches', sa.Column('customs_fee_ore', sa.Integer(), nullable=True, comment='Customs fee in NOK øre'))
    op.add_column('wine_batches', sa.Column('freight_forwarding_ore', sa.Integer(), nullable=True, comment='Freight forwarding cost in NOK øre'))
    op.add_column('wine_batches', sa.Column('fiken_sync_status', sa.String(length=20), nullable=True, comment='Fiken synchronization status'))
    op.add_column('wine_batches', sa.Column('active', sa.Boolean(), nullable=False, comment='Soft delete flag'))
    op.alter_column('wine_batches', 'status',
               existing_type=sa.VARCHAR(length=9),
               type_=sa.Enum('ORDERED', 'IN_TRANSIT', 'CUSTOMS', 'AVAILABLE', 'SOLD_OUT', name='winebatchstatus'),
               nullable=True)
    op.drop_index('idx_wine_batch_status', table_name='wine_batches')
    op.drop_index('ix_wine_batches_batch_number', table_name='wine_batches')
    op.drop_index('ix_wine_batches_wine_name', table_name='wine_batches')
    op.create_unique_constraint(None, 'wine_batches', ['batch_number'])
    op.create_foreign_key(None, 'wine_batches', 'suppliers', ['supplier_id'], ['id'])
    op.drop_column('wine_batches', 'total_cost_nok_ore')
    op.drop_column('wine_batches', 'target_price_nok_ore')
    op.drop_column('wine_batches', 'producer')
    op.drop_column('wine_batches', 'wine_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('wine_batches', sa.Column('wine_name', sa.VARCHAR(length=200), nullable=False))
    op.add_column('wine_batches', sa.Column('producer', sa.VARCHAR(length=200), nullable=False))
    op.add_column('wine_batches', sa.Column('target_price_nok_ore', sa.INTEGER(), nullable=True))
    op.add_column('wine_batches', sa.Column('total_cost_nok_ore', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'wine_batches', type_='foreignkey')
    op.drop_constraint(None, 'wine_batches', type_='unique')
    op.create_index('ix_wine_batches_wine_name', 'wine_batches', ['wine_name'], unique=False)
    op.create_index('ix_wine_batches_batch_number', 'wine_batches', ['batch_number'], unique=1)
    op.create_index('idx_wine_batch_status', 'wine_batches', ['status'], unique=False)
    op.alter_column('wine_batches', 'status',
               existing_type=sa.Enum('ORDERED', 'IN_TRANSIT', 'CUSTOMS', 'AVAILABLE', 'SOLD_OUT', name='winebatchstatus'),
               type_=sa.VARCHAR(length=9),
               nullable=False)
    op.drop_column('wine_batches', 'active')
    op.drop_column('wine_batches', 'fiken_sync_status')
    op.drop_column('wine_batches', 'freight_forwarding_ore')
    op.drop_column('wine_batches', 'customs_fee_ore')
    op.drop_column('wine_batches', 'transport_cost_ore')
    op.drop_column('wine_batches', 'wine_cost_eur_cents')
    op.drop_column('wine_batches', 'eur_exchange_rate')
    op.drop_column('wine_batches', 'supplier_id')
    op.drop_column('wine_batches', 'import_date')
    op.drop_table('wine_inventory')
    op.drop_table('wine_batch_costs')
    op.drop_table('wines')
    op.drop_table('suppliers')
    # ### end Alembic commands ### 